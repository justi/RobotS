var searchIndex = {};
searchIndex['robots'] = {"items":[[0,"","robots","Actor system library.",null,null],[0,"actors","","Actors core.",null,null],[8,"Any","robots::actors","A type to emulate dynamic typing.",null,null],[10,"get_type_id","","Gets the `TypeId` of `self`.",0,{"inputs":[{"name":"any"}],"output":{"name":"typeid"}}],[0,"actor_ref","","Module for ActorRef and CanReceive, the interface given to the user to interract with  actors.",null,null],[3,"ConnectionInfo","robots::actors::actor_ref","This gives connection informations on how to get to the distant actors.",null,null],[3,"ActorRef","","An `ActorRef` is the way used to interract with something that acts as an actor.",null,null],[4,"ActorPath","","Path to an actor.",null,null],[13,"Local","","Logical path to a local actor.",1,null],[13,"Distant","","Logical path and connection information for a distant actor.",1,null],[11,"eq","","",1,{"inputs":[{"name":"actorpath"},{"name":"actorpath"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"actorpath"},{"name":"actorpath"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"actorpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_local","","Creates a new local ActorPath variant with the given logical_path.",1,{"inputs":[{"name":"actorpath"},{"name":"string"}],"output":{"name":"arc"}}],[11,"new_distant","","Creates a new distant ActorPath.",1,{"inputs":[{"name":"actorpath"},{"name":"string"},{"name":"string"}],"output":{"name":"arc"}}],[11,"logical_path","","Gives a reference to the logical path of an actor.",1,{"inputs":[{"name":"actorpath"}],"output":{"name":"string"}}],[11,"child","","Creates an ActorPath for a child of an actor.",1,{"inputs":[{"name":"actorpath"},{"name":"string"}],"output":{"name":"arc"}}],[11,"eq","","",2,{"inputs":[{"name":"connectioninfo"},{"name":"connectioninfo"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"connectioninfo"},{"name":"connectioninfo"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"connectioninfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"distant_logical_path","","Distant logical path.",2,{"inputs":[{"name":"connectioninfo"}],"output":{"name":"string"}}],[11,"addr_port","","Address and port of the distant actor.",2,{"inputs":[{"name":"connectioninfo"}],"output":{"name":"string"}}],[11,"new_distant","","Creates a new ActorRef to a distant actor, with the given ActorPath.",3,{"inputs":[{"name":"actorref"},{"name":"arc"}],"output":{"name":"actorref"}}],[11,"with_cthulhu","","Creates a new ActorRef to Cthulhu, this should only be called once.",3,{"inputs":[{"name":"actorref"},{"name":"cthulhu"}],"output":{"name":"actorref"}}],[11,"with_cell","","Creates a new ActorRef for a local Actor, with the given ActorCell.",3,{"inputs":[{"name":"actorref"},{"name":"actorcell"},{"name":"arc"}],"output":{"name":"actorref"}}],[11,"with_complete","","Creates a new ActorRef to a local Future, with the given `Complete` (a C`omplete` is what is\nused to complete a `Future`).",3,{"inputs":[{"name":"actorref"},{"name":"complete"}],"output":{"name":"actorref"}}],[11,"receive_system_message","","Receives a system message such as `Start`, `Restart` or a `Failure(ActorRef)`, puts it in\nthe system mailbox and schedules the actor if needed.",3,{"inputs":[{"name":"actorref"},{"name":"systemmessage"}],"output":null}],[11,"receive","","Receives a regular message and puts it in the mailbox and schedules the actor if needed.",3,{"inputs":[{"name":"actorref"},{"name":"innermessage"},{"name":"actorref"}],"output":null}],[11,"handle","","Handles a messages by calling the `receive` method of the underlying actor.",3,{"inputs":[{"name":"actorref"}],"output":null}],[11,"path","","Gives a clone of the ActorPath.",3,{"inputs":[{"name":"actorref"}],"output":{"name":"arc"}}],[11,"tell_to","","Makes this ActorRef send a message to anther ActorRef.",3,{"inputs":[{"name":"actorref"},{"name":"actorref"},{"name":"messageto"}],"output":null}],[11,"ask","","Sends a message to an ActorRef, the answer to this message will be put in the `Future` given\nas return value.",3,{"inputs":[{"name":"actorref"},{"name":"messageto"}],"output":{"name":"future"}}],[11,"clone","","",3,{"inputs":[{"name":"actorref"}],"output":{"name":"actorref"}}],[0,"actor_system","robots::actors","Module for the ActorSystem.",null,null],[3,"ActorSystem","robots::actors::actor_system","The actor system is the struct that manages:",null,null],[11,"new","","Creates a new ActorSystem.",4,{"inputs":[{"name":"actorsystem"},{"name":"string"}],"output":{"name":"actorsystem"}}],[11,"actor_of","","Spawns an Actor created using the Props given for the user.",4,{"inputs":[{"name":"actorsystem"},{"name":"arc"},{"name":"string"}],"output":{"name":"actorref"}}],[11,"system_actor_of","","Spawns an Actor created using the Props given for the system.",4,{"inputs":[{"name":"actorsystem"},{"name":"arc"},{"name":"string"}],"output":{"name":"actorref"}}],[11,"shutdown","","Shuts the actor system down.",4,{"inputs":[{"name":"actorsystem"}],"output":null}],[11,"enqueue_actor","","Enqueues the given ActorRef in the queue of ActorRef with message to handle.",4,{"inputs":[{"name":"actorsystem"},{"name":"actorref"}],"output":null}],[11,"spawn_thread","","Spawns a thread that will have ActorRef handle their messages.",4,{"inputs":[{"name":"actorsystem"}],"output":null}],[11,"terminate_thread","","Kills a consumer thread.",4,{"inputs":[{"name":"actorsystem"}],"output":null}],[11,"spawn_threads","","Spawns n consumer threads.",4,{"inputs":[{"name":"actorsystem"},{"name":"u32"}],"output":null}],[11,"terminate_threads","","Kills n consumer threads.",4,{"inputs":[{"name":"actorsystem"},{"name":"u32"}],"output":null}],[11,"name_resolver","","Gives the ActorRef of the name resolver actor.",4,{"inputs":[{"name":"actorsystem"}],"output":{"name":"actorref"}}],[11,"clone","","",4,{"inputs":[{"name":"actorsystem"}],"output":{"name":"actorsystem"}}],[0,"props","robots::actors","Module for Actor factories (Props).",null,null],[3,"Props","robots::actors::props","Props is the current only ActorFactory.",null,null],[8,"ActorFactory","","Public interface of a Props.",null,null],[10,"create","","Creates an Actor instance.",5,{"inputs":[{"name":"actorfactory"}],"output":{"name":"arc"}}],[11,"new","","Creates a `Props` which is a factory for `A` with the `creator` function and `args` args.",6,{"inputs":[{"name":"props"},{"name":"arc"},{"name":"args"}],"output":{"name":"arc"}}],[11,"create","","Creates an Actor instance with the `creator` function and the `args` args.",6,{"inputs":[{"name":"props"}],"output":{"name":"arc"}}],[11,"clone","","",6,{"inputs":[{"name":"props"}],"output":{"name":"props"}}],[0,"actor_cell","robots::actors","Module with the internals of Actors.",null,null],[3,"ActorCell","robots::actors::actor_cell","Main interface for interractiong with an Actor for the internals.",null,null],[4,"SystemMessage","","Special messages issued by the actor system.\nNote that these are treated with the highest priority and will thus be handled before any\nInnerMessage is handled.",null,null],[13,"Restart","","Restarts the actor by replacing it with a new version created with its ActorFactory.",7,null],[13,"Start","","Tells the actor to initialize itself.\nNote that the initialization is not done by the father for fairness reasons.",7,null],[13,"Failure","","Tells an actor that its child failed.",7,null],[4,"InnerMessage","","Types of message that can be sent to an actor that will be treated normally.",null,null],[13,"Message","","Regular message.",8,null],[13,"Control","","Control messages.",8,null],[4,"ControlMessage","","Control Messages.",null,null],[13,"PoisonPill","","Requests the termination of the actor.\nThis is what is sent when the `context.stop(actor_ref)` is called.",9,null],[13,"Terminated","","Message sent to the monitoring actors when the actor is terminated.",9,null],[13,"KillMe","","Message sent to the father of an actor to request being terminated.",9,null],[8,"ActorContext","","This is the API that Actors are supposed to see of their context while handling a message.",null,null],[10,"actor_ref","","Returns an ActorRef to the Actor.",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"actorref"}}],[10,"actor_of","","Spawns a child actor.",10,{"inputs":[{"name":"actorcontext"},{"name":"arc"},{"name":"string"}],"output":{"name":"actorref"}}],[10,"tell","","Sends a Message to the targeted ActorRef.",10,{"inputs":[{"name":"actorcontext"},{"name":"actorref"},{"name":"messageto"}],"output":null}],[10,"stop","","Requests the targeted actor to stop.",10,{"inputs":[{"name":"actorcontext"},{"name":"actorref"}],"output":null}],[10,"kill_me","","Asks the father of the actor to terminate it.",10,{"inputs":[{"name":"actorcontext"}],"output":null}],[10,"sender","","Returns an Arc to the sender of the message being handled.",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"actorref"}}],[10,"father","","Father of the actor.",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"actorref"}}],[10,"children","","Children of the actor.",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"vec"}}],[10,"monitoring","","Lifecycle monitoring, list of monitored actors.",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"vec"}}],[10,"path","","Logical path to the actor, such as `/user/foo/bar/baz`",10,{"inputs":[{"name":"actorcontext"}],"output":{"name":"arc"}}],[10,"identify_actor","","Tries to give an address from an actor path.\nNote that eventual futures are lazy, thus you need to await on the Future at some point,\nthis makes this a synchronous call.",10,{"inputs":[{"name":"actorcontext"},{"name":"string"}],"output":{"name":"future"}}],[11,"clone","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"actorcell"}}],[11,"new","","Creates a new ActorCell.",11,{"inputs":[{"name":"actorcell"},{"name":"arc"},{"name":"actorsystem"},{"name":"actorref"},{"name":"arc"}],"output":{"name":"actorcell"}}],[11,"receive_message","","Puts a message with its sender in the Actor's mailbox and schedules the Actor.",11,{"inputs":[{"name":"actorcell"},{"name":"innermessage"},{"name":"actorref"}],"output":null}],[11,"receive_system_message","","Puts a system message with its sender in the Actor's system mailbox and schedules the Actor.",11,{"inputs":[{"name":"actorcell"},{"name":"systemmessage"}],"output":null}],[11,"handle_envelope","","Makes the Actor handle an envelope in its mailbox.",11,{"inputs":[{"name":"actorcell"}],"output":null}],[11,"actor_ref","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"actorref"}}],[11,"actor_of","","",11,{"inputs":[{"name":"actorcell"},{"name":"arc"},{"name":"string"}],"output":{"name":"actorref"}}],[11,"tell","","",11,{"inputs":[{"name":"actorcell"},{"name":"actorref"},{"name":"messageto"}],"output":null}],[11,"sender","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"actorref"}}],[11,"stop","","",11,{"inputs":[{"name":"actorcell"},{"name":"actorref"}],"output":null}],[11,"kill_me","","",11,{"inputs":[{"name":"actorcell"}],"output":null}],[11,"father","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"actorref"}}],[11,"children","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"vec"}}],[11,"monitoring","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"vec"}}],[11,"path","","",11,{"inputs":[{"name":"actorcell"}],"output":{"name":"arc"}}],[11,"identify_actor","","",11,{"inputs":[{"name":"actorcell"},{"name":"string"}],"output":{"name":"future"}}],[11,"clone","","",7,{"inputs":[{"name":"systemmessage"}],"output":{"name":"systemmessage"}}],[11,"clone","","",9,{"inputs":[{"name":"controlmessage"}],"output":{"name":"controlmessage"}}],[8,"Message","robots::actors","Trait to be implemented by messages, this is automatically given if a struct is\nalready `Clone + Send + Sync + 'static + Any`.",null,null],[8,"Arguments","","Trait to be implemented by args, this is automatically given if a struct is\nalready `Clone + Send + Sync + 'static + Any`.",null,null],[8,"Actor","","This is the trait to implement to become an Actor.",null,null],[10,"receive","","Single method to be implemented for an Actor.",12,{"inputs":[{"name":"actor"},{"name":"box"},{"name":"actorcell"}],"output":null}],[11,"receive_termination","","Method called when a monitored actor is terminated.",12,{"inputs":[{"name":"actor"},{"name":"actorcell"}],"output":null}],[11,"pre_start","","Method called before the Actor is started.",12,{"inputs":[{"name":"actor"},{"name":"actorcell"}],"output":null}],[11,"post_stop","","Method called after the Actor is stopped.",12,{"inputs":[{"name":"actor"}],"output":null}],[11,"pre_restart","","Method called before the Actor is restarted.",12,{"inputs":[{"name":"actor"},{"name":"actorcell"}],"output":null}],[11,"post_restart","","Method called after the Actor is restarted.",12,{"inputs":[{"name":"actor"},{"name":"actorcell"}],"output":null}]],"paths":[[8,"Any"],[4,"ActorPath"],[3,"ConnectionInfo"],[3,"ActorRef"],[3,"ActorSystem"],[8,"ActorFactory"],[3,"Props"],[4,"SystemMessage"],[4,"InnerMessage"],[4,"ControlMessage"],[8,"ActorContext"],[3,"ActorCell"],[8,"Actor"]]};
searchIndex['eventual'] = {"items":[[0,"","eventual","Composable primitives for asynchronous computations",null,null],[3,"Future","","",null,null],[3,"Complete","","An object that is used to fulfill or reject an associated Future.",null,null],[3,"Receipt","","",null,null],[3,"Stream","","",null,null],[3,"StreamIter","","",null,null],[3,"Sender","","The sending half of `Stream::pair()`. Can only be owned by a single task at\na time.",null,null],[3,"BusySender","","",null,null],[3,"Timer","","Provides timeouts as a `Future` and periodic ticks as a `Stream`.",null,null],[4,"AsyncError","","",null,null],[13,"Failed","","",0,null],[13,"Aborted","","",0,null],[5,"join","","",null,{"inputs":[{"name":"j"}],"output":{"name":"future"}}],[5,"background","","This method backgrounds a task onto a task runner waiting for complete to be called.\nCurrently we only support using a ThreadPool as the task runner itself.",null,{"inputs":[{"name":"r"},{"name":"box"}],"output":{"name":"future"}}],[5,"defer","","This method defers a task onto a task runner until we can complete that call.\nCurrently we only support using a ThreadPool as the task runner itself.",null,{"inputs":[{"name":"r"},{"name":"a"}],"output":{"name":"future"}}],[5,"select","","",null,{"inputs":[{"name":"s"}],"output":{"name":"future"}}],[5,"sequence","","Returns a `Stream` consisting of the completion of the supplied async\nvalues in the order that they are completed.",null,{"inputs":[{"name":"i"}],"output":{"name":"stream"}}],[11,"pair","","",1,null],[11,"of","","Returns a future that will immediately succeed with the supplied value.",1,{"inputs":[{"name":"future"},{"name":"t"}],"output":{"name":"future"}}],[11,"error","","Returns a future that will immediately fail with the supplied error.",1,{"inputs":[{"name":"future"},{"name":"e"}],"output":{"name":"future"}}],[11,"lazy","","Returns a future that won't kick off its async action until\na consumer registers interest.",1,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"map","","",1,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"map_err","","Returns a new future with an identical value as the original. If the\noriginal future fails, apply the given function on the error and use\nthe result as the error of the new future.",1,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"spawn","","Returns a `Future` representing the completion of the given closure.\nThe closure will be executed on a newly spawned thread.",1,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"to_stream","","An adapter that converts any future into a one-value stream",1,{"inputs":[{"name":"future"}],"output":{"name":"stream"}}],[11,"is_ready","","",1,{"inputs":[{"name":"future"}],"output":{"name":"bool"}}],[11,"is_err","","",1,{"inputs":[{"name":"future"}],"output":{"name":"bool"}}],[11,"poll","","",1,{"inputs":[{"name":"future"}],"output":{"name":"result"}}],[11,"ready","","",1,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"receipt"}}],[11,"await","","",1,{"inputs":[{"name":"future"}],"output":{"name":"asyncresult"}}],[11,"pair","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"future"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",1,{"inputs":[{"name":"future"}],"output":null}],[11,"cancel","","",2,{"inputs":[{"name":"receipt"}],"output":{"name":"option"}}],[11,"complete","","Fulfill the associated promise with a value",3,{"inputs":[{"name":"complete"},{"name":"t"}],"output":null}],[11,"fail","","Reject the associated promise with an error. The error\nwill be wrapped in `Async::Error::Failed`.",3,{"inputs":[{"name":"complete"},{"name":"e"}],"output":null}],[11,"abort","","",3,{"inputs":[{"name":"complete"}],"output":null}],[11,"is_ready","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"bool"}}],[11,"is_err","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"bool"}}],[11,"ready","","",3,{"inputs":[{"name":"complete"},{"name":"f"}],"output":null}],[11,"await","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"asyncresult"}}],[11,"is_ready","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"bool"}}],[11,"is_err","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"bool"}}],[11,"poll","","",3,{"inputs":[{"name":"complete"}],"output":{"name":"result"}}],[11,"ready","","",3,{"inputs":[{"name":"complete"},{"name":"f"}],"output":{"name":"receipt"}}],[11,"drop","","",3,{"inputs":[{"name":"complete"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"complete"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cancel","","",2,{"inputs":[{"name":"receipt"}],"output":{"name":"option"}}],[11,"join","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"complete"}],"output":null}],[11,"pair","eventual","Creates a new `Stream`, returning it with the associated `Sender`.",5,null],[11,"empty","","Returns a Stream that will immediately succeed with the supplied value.",5,{"inputs":[{"name":"stream"}],"output":{"name":"stream"}}],[11,"collect","","Asyncronously collects the items from the `Stream`, returning them sorted by order of\narrival.",5,{"inputs":[{"name":"stream"}],"output":{"name":"future"}}],[11,"iter","","Synchronously iterate over the `Stream`",5,{"inputs":[{"name":"stream"}],"output":{"name":"streamiter"}}],[11,"each","","Sequentially yields each value to the supplied function. Returns a\nfuture representing the completion of the final yield.",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"future"}}],[11,"filter","","Returns a new stream containing the values of the original stream that\nmatch the given predicate.",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"stream"}}],[11,"map","","Returns a new stream representing the application of the specified\nfunction to each value of the original stream.",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"stream"}}],[11,"map_async","","Returns a new stream representing the application of the specified\nfunction to each value of the original stream. Each iteration waits for\nthe async result of the mapping to realize before continuing on to the\nnext value.",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"stream"}}],[11,"map_err","","Returns a new stream with an identical sequence of values as the\noriginal. If the original stream errors, apply the given function on\nthe error and use the result as the error of the new stream.",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"stream"}}],[11,"process","","",5,{"inputs":[{"name":"stream"},{"name":"usize"},{"name":"f"}],"output":{"name":"stream"}}],[11,"reduce","","Aggregate all the values of the stream by applying the given function\nto each value and the result of the previous application. The first\niteration is seeded with the given initial value.",5,{"inputs":[{"name":"stream"},{"name":"u"},{"name":"f"}],"output":{"name":"future"}}],[11,"reduce_async","","Aggregate all the values of the stream by applying the given function\nto each value and the realized result of the previous application. The\nfirst iteration is seeded with the given initial value.",5,{"inputs":[{"name":"stream"},{"name":"x"},{"name":"f"}],"output":{"name":"future"}}],[11,"take","","Returns a stream representing the `n` first values of the original\nstream.",5,{"inputs":[{"name":"stream"},{"name":"u64"}],"output":{"name":"stream"}}],[11,"take_while","","",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"stream"}}],[11,"take_until","","",5,{"inputs":[{"name":"stream"},{"name":"a"}],"output":{"name":"stream"}}],[11,"to_future","","",5,{"inputs":[{"name":"stream"}],"output":{"name":"future"}}],[11,"is_ready","","",5,{"inputs":[{"name":"stream"}],"output":{"name":"bool"}}],[11,"is_err","","",5,{"inputs":[{"name":"stream"}],"output":{"name":"bool"}}],[11,"poll","","",5,{"inputs":[{"name":"stream"}],"output":{"name":"result"}}],[11,"ready","","",5,{"inputs":[{"name":"stream"},{"name":"f"}],"output":{"name":"receipt"}}],[11,"await","","",5,{"inputs":[{"name":"stream"}],"output":{"name":"asyncresult"}}],[11,"pair","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"stream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",5,{"inputs":[{"name":"stream"}],"output":null}],[11,"cancel","","",2,{"inputs":[{"name":"receipt"}],"output":{"name":"option"}}],[11,"send","","Attempts to send a value to its `Stream`. Consumes self and returns a\nfuture representing the operation completing successfully and interest\nin the next value being expressed.",6,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"busysender"}}],[11,"fail","","Terminated the stream with the given error.",6,{"inputs":[{"name":"sender"},{"name":"e"}],"output":null}],[11,"abort","","Fails the paired `Stream` with a cancellation error. This will\neventually go away when carllerche/syncbox#10 lands. It is currently\nneeded to keep the state correct (see async::sequence)",6,{"inputs":[{"name":"sender"}],"output":null}],[11,"send_all","","Send + 'static all the values in the given source",6,{"inputs":[{"name":"sender"},{"name":"s"}],"output":{"name":"future"}}],[11,"is_ready","","",6,{"inputs":[{"name":"sender"}],"output":{"name":"bool"}}],[11,"is_err","","",6,{"inputs":[{"name":"sender"}],"output":{"name":"bool"}}],[11,"poll","","",6,{"inputs":[{"name":"sender"}],"output":{"name":"result"}}],[11,"ready","","",6,{"inputs":[{"name":"sender"},{"name":"f"}],"output":{"name":"receipt"}}],[11,"drop","","",6,{"inputs":[{"name":"sender"}],"output":null}],[11,"is_ready","","",7,{"inputs":[{"name":"busysender"}],"output":{"name":"bool"}}],[11,"is_err","","",7,{"inputs":[{"name":"busysender"}],"output":{"name":"bool"}}],[11,"poll","","",7,{"inputs":[{"name":"busysender"}],"output":{"name":"result"}}],[11,"ready","","",7,{"inputs":[{"name":"busysender"},{"name":"f"}],"output":{"name":"receipt"}}],[11,"drop","","",7,{"inputs":[{"name":"busysender"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send_all","","",1,{"inputs":[{"name":"future"},{"name":"sender"}],"output":{"name":"future"}}],[11,"send_all","","",5,{"inputs":[{"name":"stream"},{"name":"sender"}],"output":{"name":"future"}}],[11,"cancel","","",2,{"inputs":[{"name":"receipt"}],"output":{"name":"option"}}],[11,"cancel","","",2,{"inputs":[{"name":"receipt"}],"output":{"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"streamiter"}],"output":{"name":"option"}}],[11,"drop","","",8,{"inputs":[{"name":"streamiter"}],"output":null}],[11,"new","","Creates a new timer backed by a thread pool with 5 threads.",9,{"inputs":[{"name":"timer"}],"output":{"name":"timer"}}],[11,"with_capacity","","Creates a new timer backed by a thread pool with `capacity` threads.",9,{"inputs":[{"name":"timer"},{"name":"u32"}],"output":{"name":"timer"}}],[11,"timeout_ms","","Returns a `Future` that will be completed in `ms` milliseconds",9,{"inputs":[{"name":"timer"},{"name":"u32"}],"output":{"name":"future"}}],[11,"interval_ms","","Return a `Stream` with values realized every `ms` milliseconds.",9,{"inputs":[{"name":"timer"},{"name":"u32"}],"output":{"name":"stream"}}],[11,"clone","","",9,{"inputs":[{"name":"timer"}],"output":{"name":"timer"}}],[6,"AsyncResult","","",null,null],[8,"Join","","",null,null],[10,"join","","",10,{"inputs":[{"name":"join"},{"name":"complete"}],"output":null}],[8,"Select","","",null,null],[10,"select","","",11,{"inputs":[{"name":"select"},{"name":"complete"}],"output":null}],[8,"Async","","A value representing an asynchronous computation",null,null],[16,"Value","","",12,null],[16,"Error","","",12,null],[16,"Cancel","","",12,null],[10,"is_ready","","Returns true if `expect` will succeed.",12,{"inputs":[{"name":"async"}],"output":{"name":"bool"}}],[10,"is_err","","Returns true if the async value is ready and has failed",12,{"inputs":[{"name":"async"}],"output":{"name":"bool"}}],[10,"poll","","Get the underlying value if present",12,{"inputs":[{"name":"async"}],"output":{"name":"result"}}],[11,"expect","","Get the underlying value if present, panic otherwise",12,{"inputs":[{"name":"async"}],"output":{"name":"asyncresult"}}],[10,"ready","","Invokes the given function when the Async instance is ready to be\nconsumed.",12,{"inputs":[{"name":"async"},{"name":"f"}],"output":{"name":"cancel"}}],[11,"receive","","Invoke the callback with the resolved `Async` result.",12,{"inputs":[{"name":"async"},{"name":"f"}],"output":null}],[11,"await","","Blocks the thread until the async value is complete and returns the\nresult.",12,{"inputs":[{"name":"async"}],"output":{"name":"asyncresult"}}],[11,"fire","","Trigger the computation without waiting for the result",12,{"inputs":[{"name":"async"}],"output":null}],[11,"and","","This method returns a future whose completion value depends on the\ncompletion value of the original future.",12,{"inputs":[{"name":"async"},{"name":"u"}],"output":{"name":"future"}}],[11,"and_then","","This method returns a future whose completion value depends on the\ncompletion value of the original future.",12,{"inputs":[{"name":"async"},{"name":"f"}],"output":{"name":"future"}}],[11,"or","","This method returns a future whose completion value depends on the\ncompletion value of the original future.",12,{"inputs":[{"name":"async"},{"name":"a"}],"output":{"name":"future"}}],[11,"or_else","","This method returns a future whose completion value depends on the\ncompletion value of the original future.",12,{"inputs":[{"name":"async"},{"name":"f"}],"output":{"name":"future"}}],[8,"Pair","","",null,null],[16,"Tx","","",13,null],[10,"pair","","",13,null],[8,"Cancel","","",null,null],[10,"cancel","","",14,{"inputs":[{"name":"cancel"}],"output":{"name":"option"}}],[11,"is_ready","core::result","",15,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","",15,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"poll","","",15,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"ready","","",15,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"option"}}],[11,"await","","",15,{"inputs":[{"name":"result"}],"output":{"name":"asyncresult"}}],[11,"cancel","core::option","",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","eventual","",0,{"inputs":[{"name":"asyncerror"},{"name":"asyncerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"asyncerror"},{"name":"asyncerror"}],"output":{"name":"bool"}}],[11,"failed","","",0,{"inputs":[{"name":"asyncerror"},{"name":"e"}],"output":{"name":"asyncerror"}}],[11,"aborted","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"asyncerror"}}],[11,"is_aborted","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"bool"}}],[11,"is_failed","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"bool"}}],[11,"unwrap","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"e"}}],[11,"take","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"option"}}],[11,"description","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"asyncerror"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"asyncerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"asyncerror"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"AsyncError"],[3,"Future"],[3,"Receipt"],[3,"Complete"],[3,"Vec"],[3,"Stream"],[3,"Sender"],[3,"BusySender"],[3,"StreamIter"],[3,"Timer"],[8,"Join"],[8,"Select"],[8,"Async"],[8,"Pair"],[8,"Cancel"],[4,"Result"],[4,"Option"]]};
searchIndex['syncbox'] = {"items":[[0,"","syncbox","A collection of utilities for writing concurrent code.",null,null],[3,"ArrayQueue","","",null,null],[3,"DelayQueue","","An unbounded blocking queue of delayed values. When a value is pushed onto\nthe queue, a delay is included. The value will only be able to be popped\noff once the specified delay has expired. The head of the queue is the\nvalue whose delay is expired and furthest in the past.",null,null],[3,"Delay","","Associate a delay with a value",null,null],[3,"LinkedQueue","","A queue in which values are contained by a linked list.",null,null],[3,"ThreadPool","","",null,null],[3,"ScheduledThreadPool","","A thread pool that can schedule tasks to run after a given delay, or to\nexecute periodically. Delayed tasks do not run before their associated\ndelays, but besides that, there are no real-time guarantees about exactly\nwhen the task will run.",null,null],[0,"atomic","","",null,null],[11,"new","core::sync::atomic","Creates a new `AtomicIsize`.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",0,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",0,null],[11,"swap","","Stores a value into the isize, returning the old value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",0,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"default","core::num","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",1,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",2,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",3,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",4,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",4,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",4,null],[11,"clone","","",5,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",5,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",5,null],[11,"fmt","","",6,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",7,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",7,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",8,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,null],[11,"eq","","",10,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",11,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",11,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",12,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",13,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",13,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",13,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",13,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",13,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",13,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",13,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",13,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",13,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",13,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",13,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",13,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",13,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",13,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",13,null],[11,"eq","","",13,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",13,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",13,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",13,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",14,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",14,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",14,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",14,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",14,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",14,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",14,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",14,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",14,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",14,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",14,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",14,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",14,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",14,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",14,null],[11,"eq","","",14,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",14,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",14,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",14,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",15,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",15,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",15,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",15,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",16,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",18,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",19,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",20,null],[11,"get","","Dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",21,null],[11,"clone","","",21,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",22,null],[11,"eq","","",22,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",22,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",22,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",23,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",23,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",24,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",25,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",26,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",27,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",27,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",27,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","syncbox","",28,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",28,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",28,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",28,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",29,null],[11,"fmt","","",29,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",29,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",30,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",0,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",31,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",32,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",33,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",30,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",30,null],[11,"swap","","Stores a value into the bool, returning the old value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",30,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicUsize`.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",31,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",31,null],[11,"swap","","Stores a value into the usize, returning the old value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",32,null],[11,"load","","Loads a value from the pointer.",32,null],[11,"store","","Stores a value into the pointer.",32,null],[11,"swap","","Stores a value into the pointer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",32,null],[11,"fmt","","",31,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",34,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",34,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",34,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",34,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",34,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",36,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",36,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",36,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",37,null],[11,"clone","","",37,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",38,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",38,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",40,null],[11,"deref","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",41,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",41,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",41,null],[11,"clone","core::char","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",43,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"clone","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",45,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"clone","core::iter","",46,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"next_back","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",50,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",49,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",51,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",52,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",53,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",54,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",55,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",55,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"nth","","",55,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",55,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",55,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",56,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",56,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",56,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",56,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",56,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",56,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",57,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"clone","","",58,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",58,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",59,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",59,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",59,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",59,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",60,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",60,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"clone","","",61,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",61,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",62,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",63,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",63,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",63,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",63,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",64,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",25,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",24,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",65,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",66,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",65,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next","core::ops","",24,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"next_back","","",24,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",25,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",67,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",67,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",68,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",68,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",68,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",69,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",69,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",69,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",70,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",70,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",70,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",70,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",70,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",70,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",70,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",70,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",70,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",70,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",70,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",70,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",70,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",70,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",70,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",70,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",70,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",70,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",70,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",70,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",70,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",71,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",71,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",73,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",70,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",75,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",76,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",77,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",77,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",77,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",77,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",77,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",77,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",77,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",77,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",77,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",77,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",77,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",81,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",82,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",83,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",84,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",85,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",86,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",87,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",88,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",89,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",90,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",91,null],[11,"next","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"count","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",91,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",92,null],[11,"next","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"count","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",92,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",95,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next","","",96,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next","","",97,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next","","",98,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next","","",99,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"clone","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"count","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"count","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",101,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"count","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",102,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",103,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",105,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",109,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",110,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",111,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",112,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",113,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",113,null],[11,"matching","","",113,null],[11,"use_early_reject","","",114,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",114,null],[11,"matching","","",114,null],[11,"eq","core::str","",115,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",116,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",116,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",116,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",117,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",118,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"count","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",119,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",120,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",121,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",122,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",121,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",124,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",123,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",124,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",126,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",127,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",128,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",129,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",130,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",129,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",130,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",132,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",133,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",132,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",134,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",136,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",136,null],[11,"call_mut","","",136,null],[11,"call_once","","",136,null],[11,"next","","",135,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"next_back","","",135,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",138,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",138,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",138,null],[11,"finish","","",138,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",138,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",138,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",139,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",140,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",141,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",142,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",143,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",144,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",145,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",146,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",147,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",147,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",148,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",148,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",148,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",149,null],[11,"entry","","Adds a new entry to the set output.",150,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",150,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",150,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",151,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",151,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",151,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",152,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",152,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",152,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",153,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",154,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",155,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",156,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",157,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",158,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",159,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",160,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",161,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",161,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",162,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",162,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",162,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",162,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",162,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",162,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",162,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",162,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",162,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",162,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",162,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",162,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",162,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",162,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",162,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",22,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",34,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"AtomicIsize","syncbox::atomic","A signed integer type which can be safely shared between threads.",null,null],[3,"AtomicUsize","","An unsigned integer type which can be safely shared between threads.",null,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations. Corresponds to LLVM's\n`Monotonic` ordering.",33,null],[13,"Release","","When coupled with a store, all previous writes become visible\nto another thread that performs a load with `Acquire` ordering\non the same value.",33,null],[13,"Acquire","","When coupled with a load, all subsequent loads will see data\nwritten before a store with `Release` ordering on the same value\nin another thread.",33,null],[13,"AcqRel","","When coupled with a load, uses `Acquire` ordering, and with a store\n`Release` ordering.",33,null],[13,"SeqCst","","Like `AcqRel` with the additional guarantee that all threads see all\nsequentially consistent operations in the same order.",33,null],[5,"fence","","An atomic fence.",null,null],[3,"AtomicU64","","",null,null],[3,"AtomicI64","","",null,null],[3,"AtomicVal","","",null,null],[11,"new","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","",163,{"inputs":[{"name":"atomicu64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"store","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":null}],[11,"swap","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"compare_and_swap","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"fetch_add","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"fetch_sub","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"fetch_and","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"fetch_or","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"fetch_xor","","",163,{"inputs":[{"name":"atomicu64"},{"name":"u64"},{"name":"ordering"}],"output":{"name":"u64"}}],[11,"new","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","",164,{"inputs":[{"name":"atomici64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"store","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":null}],[11,"swap","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"compare_and_swap","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"fetch_add","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"fetch_sub","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"fetch_and","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"fetch_or","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[11,"fetch_xor","","",164,{"inputs":[{"name":"atomici64"},{"name":"i64"},{"name":"ordering"}],"output":{"name":"i64"}}],[8,"Atomic","","An atomic box",null,null],[10,"new","","Returns a new atomic box",165,{"inputs":[{"name":"atomic"},{"name":"t"}],"output":{"name":"self"}}],[10,"load","","Atomically loads the value from the box with the given ordering",165,{"inputs":[{"name":"atomic"},{"name":"ordering"}],"output":{"name":"t"}}],[10,"store","","Atomically stores the value from the box with the given ordering",165,{"inputs":[{"name":"atomic"},{"name":"t"},{"name":"ordering"}],"output":null}],[10,"swap","","Atomically swaps the value in the box with the given ordering",165,{"inputs":[{"name":"atomic"},{"name":"t"},{"name":"ordering"}],"output":{"name":"t"}}],[10,"compare_and_swap","","Swaps the value in the box if and only if the existing value is equal\nto `old`.",165,{"inputs":[{"name":"atomic"},{"name":"t"},{"name":"t"},{"name":"ordering"}],"output":{"name":"t"}}],[8,"ToAtomicRepr","","A value that can be stored in an atomic box",null,null],[16,"Repr","","The representation of the value when stored in an atomic box.",166,null],[10,"from_repr","","Load the value from the raw representation",166,{"inputs":[{"name":"toatomicrepr"},{"name":"repr"}],"output":{"name":"self"}}],[10,"to_repr","","Convert the value from the raw representation",166,{"inputs":[{"name":"toatomicrepr"}],"output":{"name":"repr"}}],[11,"new","","Returns a new atomic box",167,{"inputs":[{"name":"atomicval"},{"name":"t"}],"output":{"name":"atomicval"}}],[11,"new","","Returns a new atomic box",167,{"inputs":[{"name":"atomicval"},{"name":"t"}],"output":{"name":"atomicval"}}],[11,"load","","Atomically loads the value from the box with the given ordering",167,{"inputs":[{"name":"atomicval"},{"name":"ordering"}],"output":{"name":"t"}}],[11,"store","","Atomically stores the value from the box with the given ordering",167,{"inputs":[{"name":"atomicval"},{"name":"t"},{"name":"ordering"}],"output":null}],[11,"swap","","Atomically swaps the value in the box with the given ordering",167,{"inputs":[{"name":"atomicval"},{"name":"t"},{"name":"ordering"}],"output":{"name":"t"}}],[11,"compare_and_swap","","Swaps the value in the box if and only if the existing value is equal\nto `old`.",167,{"inputs":[{"name":"atomicval"},{"name":"t"},{"name":"t"},{"name":"ordering"}],"output":{"name":"t"}}],[11,"new","","",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","",31,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":null}],[11,"swap","","",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"with_capacity","syncbox","",168,{"inputs":[{"name":"arrayqueue"},{"name":"usize"}],"output":{"name":"arrayqueue"}}],[11,"push","","",168,{"inputs":[{"name":"arrayqueue"},{"name":"t"}],"output":{"name":"result"}}],[11,"pop","","",168,{"inputs":[{"name":"arrayqueue"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"arrayqueue"}],"output":{"name":"arrayqueue"}}],[11,"delay","core::option","The delay associated with the value",70,{"inputs":[{"name":"option"}],"output":{"name":"duration"}}],[11,"fmt","syncbox","",169,{"inputs":[{"name":"delay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"option"}}],[11,"lt","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"le","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"gt","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"ge","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"cmp","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"ordering"}}],[11,"eq","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"delay"},{"name":"delay"}],"output":{"name":"bool"}}],[11,"unwrap","","",169,{"inputs":[{"name":"delay"}],"output":{"name":"t"}}],[11,"delay","","",169,{"inputs":[{"name":"delay"}],"output":{"name":"duration"}}],[11,"deref","","",169,{"inputs":[{"name":"delay"}],"output":{"name":"t"}}],[11,"deref_mut","","",169,{"inputs":[{"name":"delay"}],"output":{"name":"t"}}],[11,"new","","Create a new `DelayQueue`",170,{"inputs":[{"name":"delayqueue"}],"output":{"name":"delayqueue"}}],[11,"poll_timeout","","Retrieves and removes the head of the queue, blocking if necessary for\nup to `timeout`.",170,{"inputs":[{"name":"delayqueue"},{"name":"duration"}],"output":{"name":"option"}}],[11,"poll","","",170,{"inputs":[{"name":"delayqueue"}],"output":{"name":"option"}}],[11,"is_empty","","",170,{"inputs":[{"name":"delayqueue"}],"output":{"name":"bool"}}],[11,"offer","","",170,{"inputs":[{"name":"delayqueue"},{"name":"t"}],"output":{"name":"result"}}],[11,"take","","",170,{"inputs":[{"name":"delayqueue"}],"output":{"name":"t"}}],[11,"put","","",170,{"inputs":[{"name":"delayqueue"},{"name":"t"}],"output":null}],[11,"clone","","",170,{"inputs":[{"name":"delayqueue"}],"output":{"name":"delayqueue"}}],[11,"new","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"linkedqueue"}}],[11,"with_capacity","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"usize"}],"output":{"name":"linkedqueue"}}],[11,"len","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"usize"}}],[11,"is_empty","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"bool"}}],[11,"offer","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"t"}],"output":{"name":"result"}}],[11,"offer_ms","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"t"},{"name":"u32"}],"output":{"name":"result"}}],[11,"put","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"t"}],"output":null}],[11,"poll","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"option"}}],[11,"poll_ms","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"u32"}],"output":{"name":"option"}}],[11,"take","","Takes from the queue, blocking until there is an element available.",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"t"}}],[11,"poll","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"option"}}],[11,"is_empty","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"bool"}}],[11,"offer","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"t"}],"output":{"name":"result"}}],[11,"take","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"t"}}],[11,"put","","",171,{"inputs":[{"name":"linkedqueue"},{"name":"t"}],"output":null}],[11,"clone","","",171,{"inputs":[{"name":"linkedqueue"}],"output":{"name":"linkedqueue"}}],[11,"fixed_size","","",172,{"inputs":[{"name":"threadpool"},{"name":"u32"}],"output":{"name":"threadpool"}}],[11,"single_thread","","",172,{"inputs":[{"name":"threadpool"}],"output":{"name":"threadpool"}}],[11,"new","","",172,{"inputs":[{"name":"threadpool"},{"name":"u32"},{"name":"u32"},{"name":"q"}],"output":{"name":"threadpool"}}],[11,"prestart_core_thread","","",172,{"inputs":[{"name":"threadpool"}],"output":null}],[11,"prestart_all_core_threads","","",172,{"inputs":[{"name":"threadpool"}],"output":null}],[11,"shutdown","","",172,{"inputs":[{"name":"threadpool"}],"output":null}],[11,"shutdown_now","","",172,{"inputs":[{"name":"threadpool"}],"output":null}],[11,"is_shutdown","","",172,{"inputs":[{"name":"threadpool"}],"output":{"name":"bool"}}],[11,"await_termination","","",172,{"inputs":[{"name":"threadpool"}],"output":null}],[11,"run","","",172,{"inputs":[{"name":"threadpool"},{"name":"t"}],"output":null}],[11,"clone","","",172,{"inputs":[{"name":"threadpool"}],"output":{"name":"threadpool"}}],[11,"fixed_size","","",173,{"inputs":[{"name":"scheduledthreadpool"},{"name":"u32"}],"output":{"name":"scheduledthreadpool"}}],[11,"single_thread","","",173,{"inputs":[{"name":"scheduledthreadpool"}],"output":{"name":"scheduledthreadpool"}}],[11,"schedule_ms","","",173,{"inputs":[{"name":"scheduledthreadpool"},{"name":"u32"},{"name":"t"}],"output":null}],[11,"run","","",173,{"inputs":[{"name":"scheduledthreadpool"},{"name":"t"}],"output":null}],[11,"clone","","",173,{"inputs":[{"name":"scheduledthreadpool"}],"output":{"name":"scheduledthreadpool"}}],[11,"run","alloc::boxed","",174,{"inputs":[{"name":"box"}],"output":null}],[8,"Delayed","syncbox","A value that should not be used until the delay has expired.",null,null],[10,"delay","","",175,{"inputs":[{"name":"delayed"}],"output":{"name":"duration"}}],[8,"Queue","","",null,null],[10,"poll","","Retrieves and removes the head of this queue or returns None if the\nqueue is empty.",176,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[10,"is_empty","","Returns true if the underlying data structure does not contain any\nelements.",176,{"inputs":[{"name":"queue"}],"output":{"name":"bool"}}],[10,"offer","","",176,{"inputs":[{"name":"queue"},{"name":"t"}],"output":{"name":"result"}}],[8,"SyncQueue","","",null,null],[10,"take","","Retrieves and removes the head of this queue, waiting if necessary\nuntil an element becomes available.",177,{"inputs":[{"name":"syncqueue"}],"output":{"name":"t"}}],[10,"put","","",177,{"inputs":[{"name":"syncqueue"},{"name":"t"}],"output":null}],[8,"Run","","",null,null],[10,"run","","Runs the task on the underlying executor.",178,{"inputs":[{"name":"run"},{"name":"t"}],"output":null}],[8,"Task","","A value that can run a unit of work.",null,null],[10,"run","","Run the unit of work",179,{"inputs":[{"name":"task"}],"output":null}],[8,"TaskBox","","",null,null],[10,"run_boxes","","",180,{"inputs":[{"name":"taskbox"}],"output":null}]],"paths":[[3,"AtomicIsize"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"AtomicU64"],[3,"AtomicI64"],[8,"Atomic"],[8,"ToAtomicRepr"],[3,"AtomicVal"],[3,"ArrayQueue"],[3,"Delay"],[3,"DelayQueue"],[3,"LinkedQueue"],[3,"ThreadPool"],[3,"ScheduledThreadPool"],[3,"Box"],[8,"Delayed"],[8,"Queue"],[8,"SyncQueue"],[8,"Run"],[8,"Task"],[8,"TaskBox"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['time'] = {"items":[[0,"","time","Simple time handling.",null,null],[3,"Duration","","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"timespec"},{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",5,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"shutdownloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Crate docs",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",11,null],[12,"sa_data","","",11,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",12,null],[12,"sin_port","","",12,null],[12,"sin_addr","","",12,null],[12,"sin_zero","","",12,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",13,null],[12,"sin6_port","","",13,null],[12,"sin6_flowinfo","","",13,null],[12,"sin6_addr","","",13,null],[12,"sin6_scope_id","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",15,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",16,null],[12,"ai_family","","",16,null],[12,"ai_socktype","","",16,null],[12,"ai_protocol","","",16,null],[12,"ai_addrlen","","",16,null],[12,"ai_addr","","",16,null],[12,"ai_canonname","","",16,null],[12,"ai_next","","",16,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",17,null],[12,"sll_protocol","","",17,null],[12,"sll_ifindex","","",17,null],[12,"sll_hatype","","",17,null],[12,"sll_pkttype","","",17,null],[12,"sll_halen","","",17,null],[12,"sll_addr","","",17,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",18,null],[12,"tm_min","","",18,null],[12,"tm_hour","","",18,null],[12,"tm_mday","","",18,null],[12,"tm_mon","","",18,null],[12,"tm_year","","",18,null],[12,"tm_wday","","",18,null],[12,"tm_yday","","",18,null],[12,"tm_isdst","","",18,null],[12,"tm_gmtoff","","",18,null],[12,"tm_zone","","",18,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",19,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",20,null],[12,"dli_fbase","","",20,null],[12,"dli_sname","","",20,null],[12,"dli_saddr","","",20,null],[3,"epoll_event","","",null,null],[12,"events","","",21,null],[12,"u64","","",21,null],[3,"utsname","","",null,null],[12,"sysname","","",22,null],[12,"nodename","","",22,null],[12,"release","","",22,null],[12,"version","","",22,null],[12,"machine","","",22,null],[12,"domainname","","",22,null],[3,"dirent","","",null,null],[12,"d_ino","","",23,null],[12,"d_off","","",23,null],[12,"d_reclen","","",23,null],[12,"d_type","","",23,null],[12,"d_name","","",23,null],[3,"dirent64","","",null,null],[12,"d_ino","","",24,null],[12,"d_off","","",24,null],[12,"d_reclen","","",24,null],[12,"d_type","","",24,null],[12,"d_name","","",24,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",25,null],[12,"rlim_max","","",25,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",26,null],[12,"gl_pathv","","",26,null],[12,"gl_offs","","",26,null],[12,"gl_flags","","",26,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",27,null],[12,"ifa_name","","",27,null],[12,"ifa_flags","","",27,null],[12,"ifa_addr","","",27,null],[12,"ifa_netmask","","",27,null],[12,"ifa_ifu","","",27,null],[12,"ifa_data","","",27,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",28,null],[12,"pw_passwd","","",28,null],[12,"pw_uid","","",28,null],[12,"pw_gid","","",28,null],[12,"pw_gecos","","",28,null],[12,"pw_dir","","",28,null],[12,"pw_shell","","",28,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",29,null],[12,"f_frsize","","",29,null],[12,"f_blocks","","",29,null],[12,"f_bfree","","",29,null],[12,"f_bavail","","",29,null],[12,"f_files","","",29,null],[12,"f_ffree","","",29,null],[12,"f_favail","","",29,null],[12,"f_fsid","","",29,null],[12,"f_flag","","",29,null],[12,"f_namemax","","",29,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",30,null],[12,"nl_pid","","",30,null],[12,"nl_groups","","",30,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",31,null],[12,"dqb_bsoftlimit","","",31,null],[12,"dqb_curspace","","",31,null],[12,"dqb_ihardlimit","","",31,null],[12,"dqb_isoftlimit","","",31,null],[12,"dqb_curinodes","","",31,null],[12,"dqb_btime","","",31,null],[12,"dqb_itime","","",31,null],[12,"dqb_valid","","",31,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",32,null],[12,"ssi_errno","","",32,null],[12,"ssi_code","","",32,null],[12,"ssi_pid","","",32,null],[12,"ssi_uid","","",32,null],[12,"ssi_fd","","",32,null],[12,"ssi_tid","","",32,null],[12,"ssi_band","","",32,null],[12,"ssi_overrun","","",32,null],[12,"ssi_trapno","","",32,null],[12,"ssi_status","","",32,null],[12,"ssi_int","","",32,null],[12,"ssi_ptr","","",32,null],[12,"ssi_utime","","",32,null],[12,"ssi_stime","","",32,null],[12,"ssi_addr","","",32,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",33,null],[12,"mq_maxmsg","","",33,null],[12,"mq_msgsize","","",33,null],[12,"mq_curmsgs","","",33,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",34,null],[12,"sa_mask","","",34,null],[12,"sa_flags","","",34,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",35,null],[12,"ss_flags","","",35,null],[12,"ss_size","","",35,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",36,null],[12,"si_errno","","",36,null],[12,"si_code","","",36,null],[12,"_pad","","",36,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",37,null],[12,"gl_pathv","","",37,null],[12,"gl_offs","","",37,null],[12,"gl_flags","","",37,null],[3,"ucred","","",null,null],[12,"pid","","",38,null],[12,"uid","","",38,null],[12,"gid","","",38,null],[3,"statfs","","",null,null],[12,"f_type","","",39,null],[12,"f_bsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_fsid","","",39,null],[12,"f_namelen","","",39,null],[12,"f_frsize","","",39,null],[3,"msghdr","","",null,null],[12,"msg_name","","",40,null],[12,"msg_namelen","","",40,null],[12,"msg_iov","","",40,null],[12,"msg_iovlen","","",40,null],[12,"msg_control","","",40,null],[12,"msg_controllen","","",40,null],[12,"msg_flags","","",40,null],[3,"termios","","",null,null],[12,"c_iflag","","",41,null],[12,"c_oflag","","",41,null],[12,"c_cflag","","",41,null],[12,"c_lflag","","",41,null],[12,"c_line","","",41,null],[12,"c_cc","","",41,null],[12,"c_ispeed","","",41,null],[12,"c_ospeed","","",41,null],[3,"flock","","",null,null],[12,"l_type","","",42,null],[12,"l_whence","","",42,null],[12,"l_start","","",42,null],[12,"l_len","","",42,null],[12,"l_pid","","",42,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",43,null],[12,"st_ino","","",43,null],[12,"st_nlink","","",43,null],[12,"st_mode","","",43,null],[12,"st_uid","","",43,null],[12,"st_gid","","",43,null],[12,"st_rdev","","",43,null],[12,"st_size","","",43,null],[12,"st_blksize","","",43,null],[12,"st_blocks","","",43,null],[12,"st_atime","","",43,null],[12,"st_atime_nsec","","",43,null],[12,"st_mtime","","",43,null],[12,"st_mtime_nsec","","",43,null],[12,"st_ctime","","",43,null],[12,"st_ctime_nsec","","",43,null],[3,"stat64","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_nlink","","",44,null],[12,"st_mode","","",44,null],[12,"st_uid","","",44,null],[12,"st_gid","","",44,null],[12,"st_rdev","","",44,null],[12,"st_size","","",44,null],[12,"st_blksize","","",44,null],[12,"st_blocks","","",44,null],[12,"st_atime","","",44,null],[12,"st_atime_nsec","","",44,null],[12,"st_mtime","","",44,null],[12,"st_mtime_nsec","","",44,null],[12,"st_ctime","","",44,null],[12,"st_ctime_nsec","","",44,null],[3,"pthread_attr_t","","",null,null],[3,"ipc_perm","","",null,null],[12,"__key","","",45,null],[12,"uid","","",45,null],[12,"gid","","",45,null],[12,"cuid","","",45,null],[12,"cgid","","",45,null],[12,"mode","","",45,null],[12,"__seq","","",45,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",46,null],[12,"shm_segsz","","",46,null],[12,"shm_atime","","",46,null],[12,"shm_dtime","","",46,null],[12,"shm_ctime","","",46,null],[12,"shm_cpid","","",46,null],[12,"shm_lpid","","",46,null],[12,"shm_nattch","","",46,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"syscall","","",null,null],[5,"sethostname","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",47,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",47,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",47,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",47,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",47,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",47,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",47,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",47,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",47,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",47,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",47,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",48,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",49,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",51,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",51,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",51,null],[11,"clone","","",52,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",52,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",52,null],[11,"fmt","","",53,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",54,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",54,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",55,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",56,null],[11,"eq","","",57,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",60,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",60,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",60,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",60,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",60,null],[11,"eq","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",60,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",61,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",61,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",61,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",61,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",61,null],[11,"eq","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",61,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",62,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",62,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",62,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",62,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",63,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",64,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",64,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",65,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",66,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",66,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",67,null],[11,"get","","Dereferences the content.",67,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",67,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",68,null],[11,"clone","","",68,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",69,null],[11,"eq","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",69,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",70,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",70,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",71,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",72,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",73,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",74,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",74,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",75,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",75,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",76,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",77,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",78,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",79,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",80,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",81,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",77,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",77,null],[11,"swap","","Stores a value into the bool, returning the old value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",78,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",78,null],[11,"swap","","Stores a value into the isize, returning the old value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",79,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",79,null],[11,"swap","","Stores a value into the usize, returning the old value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",80,null],[11,"load","","Loads a value from the pointer.",80,null],[11,"store","","Stores a value into the pointer.",80,null],[11,"swap","","Stores a value into the pointer, returning the old value.",80,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",80,null],[11,"fmt","","",79,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",82,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",82,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",82,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",82,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",82,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",82,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",82,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",84,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",84,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",84,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",85,null],[11,"clone","","",85,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",86,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",86,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",86,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",86,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",87,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",87,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",88,null],[11,"deref","","",87,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",87,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",89,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",89,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",89,null],[11,"clone","core::char","",90,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",91,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",90,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"clone","","",92,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",93,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",92,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"clone","core::iter","",94,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",94,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",96,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"clone","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",98,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",97,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",100,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"nth","","",103,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",104,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",104,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",105,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"clone","","",106,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",106,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",107,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"clone","","",108,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",108,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",108,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",109,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",111,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",72,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",71,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"clone","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next","core::ops","",71,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",117,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",117,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",47,null],[11,"fmt","","",47,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",118,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",118,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",47,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",122,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",123,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",124,null],[11,"fmt","","",124,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",124,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",124,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",124,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",124,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",124,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",124,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",124,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",124,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",124,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",124,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"next_back","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",126,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",124,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",128,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",129,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",130,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",131,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",132,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",133,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",134,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",135,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",136,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",137,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",136,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",137,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",136,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",137,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",136,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",137,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",136,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",137,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",132,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",133,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",134,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",135,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",128,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",129,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",130,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",131,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",138,null],[11,"next","","",138,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"count","","",138,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",138,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",138,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",139,null],[11,"next","","",139,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"count","","",139,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",139,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",139,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",140,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",140,null],[11,"next_back","","",140,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",140,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",141,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",141,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",141,null],[11,"next_back","","",141,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",142,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",142,null],[11,"next","","",143,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next","","",144,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next","","",145,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next","","",146,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"clone","","",147,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",147,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",147,null],[11,"count","","",147,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",147,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",147,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",147,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",148,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"count","","",148,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",148,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",148,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",148,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",149,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",149,null],[11,"count","","",149,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",149,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",149,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",150,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",151,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",152,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",151,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",151,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",151,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",153,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",154,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",155,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",156,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",157,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",158,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",156,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",159,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",160,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",160,null],[11,"matching","","",160,null],[11,"use_early_reject","","",161,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",161,null],[11,"matching","","",161,null],[11,"eq","core::str","",162,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",162,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",163,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",163,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",163,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",164,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",164,null],[11,"next_back","","",164,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",164,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",165,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",165,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",165,null],[11,"next_back","","",165,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",165,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",166,null],[11,"count","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",166,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",166,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",167,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",168,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",169,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",168,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",169,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",170,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",170,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",171,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",170,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",171,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",173,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",174,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",174,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",175,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",176,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",176,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",177,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",177,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",176,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",177,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",178,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",179,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",179,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",180,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",180,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",179,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",180,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",181,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",181,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",181,null],[11,"next_back","","",181,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",182,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",183,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",183,null],[11,"call_mut","","",183,null],[11,"call_once","","",183,null],[11,"next","","",182,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",182,null],[11,"next_back","","",182,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",184,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",185,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",185,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",185,null],[11,"finish","","",185,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",185,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",185,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",186,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",187,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",188,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",189,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",190,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",191,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",192,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",193,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",194,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",194,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",195,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",195,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",195,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",196,null],[11,"entry","","Adds a new entry to the set output.",197,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",197,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",197,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",198,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",198,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",198,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",199,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",199,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",199,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",200,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",201,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",202,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",203,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",204,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",205,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",205,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",206,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",207,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",208,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",208,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",209,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",209,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",209,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",209,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",209,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",209,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",209,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",209,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",209,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",209,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",209,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",209,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",209,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",209,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",209,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",69,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",82,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",210,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",210,null],[11,"clone","libc","",43,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",44,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",211,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",212,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",34,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",35,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",36,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",37,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",38,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",39,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",40,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",41,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",42,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",45,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",46,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",23,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",24,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",25,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",26,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",27,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",213,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",214,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",215,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",216,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",28,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",29,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",30,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",31,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",32,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",217,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",33,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",218,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",11,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",16,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",219,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",18,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",19,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",20,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",21,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",22,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"mqd_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"MS_VERBOSE","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MS_NOSEC","","",null,null],[17,"MS_BORN","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"AF_NETLINK","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"stat"],[3,"stat64"],[3,"ipc_perm"],[3,"shmid_ds"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex['kernel32'] = {"items":[],"paths":[]};
searchIndex['advapi32'] = {"items":[],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
initSearch(searchIndex);
